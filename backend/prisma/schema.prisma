// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           String        @id @default(uuid())
  name         String
  email        String     @unique
  cpf          String
  birthdate    DateTime
  description  String
  password     String
  accountType  String
  profileImage String
  createdAt    DateTime

  addressId    String
  address      Address?   @relation(fields: [addressId], references: [id])

  Cars         Cars[]
  Comments     Comments[]

  @@map("users")
}

model Address {
  id          String @id @default(uuid())
  cep         String
  state       String
  city        String
  street      String
  number      String
  complement  String
  
  User        User[]

  @@map("address")
}

model Cars {
  id          String   @id @default(uuid())
  model       String
  year        DateTime
  fuelType    String
  miles       String
  color       String
  description String
  price       Decimal
  imagesUrl   String
  isActive    Boolean
  createdAt   DateTime

  brandId     String
  brand       Brands? @relation(fields: [brandId], references: [id])
  userId      String
  user        User?  @relation(fields: [userId], references: [id])

  Comments    Comments[]
  Images      CarImages[]

  @@map("cars")
}

model Brands {
  id          String  @id @default(uuid())
  brandName   String 

  cars        Cars[]

  @@map("brands")
}

model CarImages {
  id          String @id @default(uuid())
  url         String

  carId       String
  car         Cars?  @relation(fields: [carId], references: [id])

  @@map("carImages")
}

model Comments {
  id          String      @id @default(uuid())
  description String
  createdAt   DateTime @default(now())
  updatedAt    DateTime @updatedAt

  userId      String
  user        User?  @relation(fields: [userId], references: [id])
  carId       String
  car         Cars?  @relation(fields: [carId], references: [id])

  @@map("comments")
}
